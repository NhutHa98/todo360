spring.application.name=java-springboot-mvc

# Datasource (in-memory H2 for boilerplate)
spring.datasource.url=jdbc:h2:mem:todo;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# JPA / Hibernate
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

# H2 console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Logging
logging.level.org.springframework=INFO

# OAuth2 / Keycloak (replace placeholders)
# Issuer URI for JWT validation (Keycloak realm)
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://<KEYCLOAK_HOST>/auth/realms/<REALM>

# OAuth2 client registration for browser login (authorization_code)
spring.security.oauth2.client.registration.keycloak.client-id=todo-client
spring.security.oauth2.client.registration.keycloak.client-secret=CHANGE_ME
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Provider settings - use issuer-uri to autodiscover endpoints
spring.security.oauth2.client.provider.keycloak.issuer-uri=https://<KEYCLOAK_HOST>/auth/realms/<REALM>

# Optional: default logout success URL (after POST to /logout)
spring.security.logout-success-url=/

# Note: replace <KEYCLOAK_HOST>, <REALM> and client secret with your Keycloak values.

# Local file storage configuration
file.upload.directory=uploads

# AWS S3 configuration
aws.s3.bucket=your-bucket-name
aws.region=your-region
aws.accessKey=your-access-key
aws.secretKey=your-secret-key
